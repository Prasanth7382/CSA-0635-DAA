#include <stdio.h>
#include <stdlib.h>
struct Item { int w, v; };
int cmp(const void *a, const void *b)
 {
    double rA = ((struct Item *)a)->v / (double)((struct Item *)a)->w;
    double rB = ((struct Item *)b)->v / (double)((struct Item *)b)->w;
    return (rB > rA) - (rB < rA);
}
void knapsackGreedy(int c, struct Item *i, int n)
 {
    qsort(i, n, sizeof(*i), cmp);
    int w = 0;
    double v = 0.0;
    for (int j = 0; j < n; j++)
	 {
        if (w + i[j].w <= c)
		 {
            w += i[j].w;
            v += i[j].v;
        } else {
            int r = c - w;
            v += i[j].v * ((double)r / i[j].w);
            break;
        }
    }
    printf("Max value in Knapsack (greedy approach): %.2f\n", v);
}
int main()
 {
    int c = 50;
    struct Item i[] = {{10, 60}, {20, 100}, {30, 120}};
    knapsackGreedy(c, i, sizeof(i) / sizeof(*i));
    return 0;
}
